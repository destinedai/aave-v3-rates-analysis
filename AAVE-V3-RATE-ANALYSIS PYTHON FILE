from datetime import datetime, timedelta
import pandas as pd
import random

# Generate synthetic AAVE v3 lending/borrowing dataset
networks = ['Ethereum', 'Arbitrum', 'Base']
tokens = ['DAI', 'USDC', 'ETH']
start_date = datetime(2023, 7, 1)
end_date = datetime(2023, 7, 3)  # For brevity, only 2 days (you can extend this)

# Create hourly time range
timestamps = pd.date_range(start=start_date, end=end_date, freq='H')

data = []

for timestamp in timestamps:
    for network in networks:
        for token in tokens:
            supply_rate = round(random.uniform(0.5, 5.0), 2)
            borrow_rate = round(supply_rate + random.uniform(0.5, 3.0), 2)
            utilization = round(random.uniform(30.0, 90.0), 2)

            data.append({
                'Timestamp (UTC)': timestamp,
                'Network': network,
                'Token': token,
                'Supply Rate (%)': supply_rate,
                'Borrowing Rate (%)': borrow_rate,
                'Utilization Rate (%)': utilization
            })

df = pd.DataFrame(data)

# Save to CSV and JSON
csv_path = '/mnt/data/aave_v3_rates_sample.csv'
json_path = '/mnt/data/aave_v3_rates_sample.json'
df.to_csv(csv_path, index=False)
df.to_json(json_path, orient='records', lines=True)

csv_path, json_path
Result
('/mnt/data/aave_v3_rates_sample.csv', '/mnt/data/aave_v3_rates_sample.js
